CREATE TABLE IF NOT EXISTS marketplace_item (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL,
    owner_id bigint NOT NULL,
    description varchar NOT NULL,
    CONSTRAINT fk_marketplace_item_owner FOREIGN KEY (owner_id) REFERENCES users (id)    
);

CREATE TABLE IF NOT EXISTS external_tool (
    mkt_item_id bigint NOT NULL PRIMARY KEY,
    CONSTRAINT fk_external_tool_mkt_item FOREIGN KEY (mkt_item_id) REFERENCES marketplace_item (id)
);

CREATE TABLE IF NOT EXISTS external_tool_version (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    external_tool_id bigint NOT NULL,
    version_name varchar,
    version_note varchar,
    dataverse_min_version varchar NOT NULL,
    display_name varchar, 
    description varchar,
    scope varchar,
    tool_url varchar,
    tool_name varchar,
    http_method varchar,    
    CONSTRAINT fk_external_tool_version_external_tool FOREIGN KEY (external_tool_id) REFERENCES external_tool (mkt_item_id)
);


CREATE TABLE IF NOT EXISTS external_tool_type (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    type varchar NOT NULL,
    external_tool_version_id bigint NOT NULL,    
    CONSTRAINT fk_external_tool_type_external_tool_version FOREIGN KEY (external_tool_version_id) REFERENCES external_tool_version (id)
);

CREATE TABLE IF NOT EXISTS content_type (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content_type varchar NOT NULL,
    external_tool_version_id bigint NOT NULL,    
    CONSTRAINT fk_content_type_external_tool_version FOREIGN KEY (external_tool_version_id) REFERENCES external_tool_version (id)
);

CREATE TABLE IF NOT EXISTS query_parameter (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    key varchar NOT NULL,
    value varchar NOT NULL,
    external_tool_version_id bigint NOT NULL,    
    CONSTRAINT fk_query_parameter_external_tool_version FOREIGN KEY (external_tool_version_id) REFERENCES external_tool_version (id)
);

CREATE TABLE IF NOT EXISTS allowed_api_call (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL,
    http_method varchar NOT NULL,
    url_template varchar NOT NULL,
    time_out integer NOT NULL,
    external_tool_version_id bigint NOT NULL,    
    CONSTRAINT fk_allowed_api_call_external_tool_version FOREIGN KEY (external_tool_version_id) REFERENCES external_tool_version (id)
);

CREATE TABLE IF NOT EXISTS aux_files_exist (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    format_tag varchar NOT NULL,
    format_version varchar NOT NULL,
    external_tool_version_id bigint NOT NULL,    
    CONSTRAINT fk_aux_files_exist_external_tool_version FOREIGN KEY (external_tool_version_id) REFERENCES external_tool_version (id)
);


CREATE TABLE IF NOT EXISTS tags (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS item_tags (
    item_id bigint NOT NULL,
    tag_id bigint NOT NULL,
    PRIMARY KEY (item_id, tag_id),
    CONSTRAINT fk_item_tags_item FOREIGN KEY (item_id) REFERENCES marketplace_item (id),
    CONSTRAINT fk_item_tags_tag FOREIGN KEY (tag_id) REFERENCES tags (id)
);

CREATE TABLE IF NOT EXISTS log_mkt_item (
    mkt_item_id bigint NOT NULL,
    user_id bigint NOT NULL,    
    date_time timestamp NOT NULL,
    operation varchar NOT NULL,
    CONSTRAINT fk_log_mkt_item_mkt_item FOREIGN KEY (mkt_item_id) REFERENCES marketplace_item (id),
    CONSTRAINT fk_log_mkt_item_user FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS stored_resource_storage_type (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    type_name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS stored_resource (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    storage_type_id bigint NOT NULL,
    file_name varchar NOT NULL,
    mime_type varchar NOT NULL,
    file_size bigint NOT NULL,
    CONSTRAINT fk_stored_resource_storage_type FOREIGN KEY (storage_type_id) REFERENCES stored_resource_storage_type (id)
);

CREATE TABLE IF NOT EXISTS marketplace_item_image (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mkt_item_id bigint NOT NULL,
    image_stored_resource_id bigint NOT NULL,
    CONSTRAINT fk_marketplace_item_image_mkt_item FOREIGN KEY (mkt_item_id) REFERENCES marketplace_item (id),
    CONSTRAINT fk_marketplace_item_image_image_stored_resource FOREIGN KEY (image_stored_resource_id) REFERENCES stored_resource (id)
);

CREATE TABLE IF NOT EXISTS database_resource_storage (   
    stored_resource_id bigint NOT NULL PRIMARY KEY,
    resource_data bytea NOT NULL,
    CONSTRAINT fk_database_resource_storage_stored_resource FOREIGN KEY (stored_resource_id) REFERENCES stored_resource (id)

);

Insert into stored_resource_storage_type (id, type_name) values (1, 'DATABASE');
Insert into stored_resource_storage_type (id, type_name) values (2, 'FILESYSTEM');
Insert into stored_resource_storage_type (id, type_name) values (3, 'CLOUD_S3');